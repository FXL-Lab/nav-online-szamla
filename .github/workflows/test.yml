name: Run Tests

on:
  workflow_dispatch:  # Manual trigger
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-3.13-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with test

    - name: Install project
      run: poetry install --no-interaction
    
    - name: Run tests with pytest
      run: |
        poetry run pytest tests/ -v --cov=nav_online_szamla --cov-report=xml --cov-report=term-missing
    
    - name: Check code formatting with black
      run: |
        poetry run black --check nav_online_szamla/ tests/

    - name: Lint with flake8
      run: |
        poetry run flake8 nav_online_szamla/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 nav_online_szamla/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Type checking with mypy
      run: |
        poetry run mypy nav_online_szamla/ --ignore-missing-imports || true

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
